numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename cbsg file with new var names
colnames(cbsg) <- newvarnames$newnames
# remove alpha characters from simserial variable
cbsg$simserial <- gsub("n/a", "", cbsg$simserial)
cbsg$simserial <- gsub("[a-zA-Z]", "", cbsg$simserial)
# remove objects
# rm(list = c("fullnames", "last1", "last2", "vnames", "numerics", "inside_pranth_1", "inside_pranth_2", "dup", "dup2", "filename", "newvarnames"))
# subset
# cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, starts_with("Q10"), Start_time, end_time) %>% rename(start_time = Start_time)
cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, Q10cbsg89, Q10m6, Start_time, end_time) %>% rename(start_time = Start_time)
write_csv(cbsg, paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/cbsg_subset__", format(Sys.time(), "%u%b%Y"), ".csv"), na = "")
dim(cbsg)
library(tidyverse)
filename <- "SWEEP_CBSG_Final_2018_10_07_03_47_51_479460.csv"
cbsg <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(cbsg)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename cbsg file with new var names
colnames(cbsg) <- newvarnames$newnames
# remove alpha characters from simserial variable
cbsg$simserial <- gsub("n/a", "", cbsg$simserial)
cbsg$simserial <- gsub("[a-zA-Z]", "", cbsg$simserial)
# remove objects
# rm(list = c("fullnames", "last1", "last2", "vnames", "numerics", "inside_pranth_1", "inside_pranth_2", "dup", "dup2", "filename", "newvarnames"))
# subset
cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, starts_with("Q10"), Start_time, end_time) %>% rename(start_time = Start_time)
# cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, Q10cbsg89, Q10m6, Start_time, end_time) %>% rename(start_time = Start_time)
write_csv(cbsg, paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/cbsg_subset__", format(Sys.time(), "%u%b%Y"), ".csv"), na = "")
dim(cbsg)
library(tidyverse)
filename <- "SWEEP_CBSG_Final_2018_10_07_03_47_51_479460.csv"
cbsg <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(cbsg)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename cbsg file with new var names
colnames(cbsg) <- newvarnames$newnames
# remove alpha characters from simserial variable
cbsg$simserial <- gsub("n/a", "", cbsg$simserial)
cbsg$simserial <- gsub("[a-zA-Z]", "", cbsg$simserial)
# remove objects
# rm(list = c("fullnames", "last1", "last2", "vnames", "numerics", "inside_pranth_1", "inside_pranth_2", "dup", "dup2", "filename", "newvarnames"))
# subset
# cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, starts_with("Q10"), Start_time, end_time) %>% rename(start_time = Start_time)
cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, Q10cbsg89, Q10m6, Start_time, end_time) %>% rename(start_time = Start_time)
write_csv(cbsg, paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/cbsg_subset__", format(Sys.time(), "%u%b%Y"), ".csv"), na = "")
dim(cbsg)
library(tidyverse)
filename <- "SWEEP_CBSG_Final_2018_10_07_03_47_51_479460.csv"
cbsg <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
dim(cbsg)
fullnames <- colnames(cbsg)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename cbsg file with new var names
colnames(cbsg) <- newvarnames$newnames
# remove alpha characters from simserial variable
cbsg$simserial <- gsub("n/a", "", cbsg$simserial)
cbsg$simserial <- gsub("[a-zA-Z]", "", cbsg$simserial)
dim(Cbsg)
dim(cbsg)
# subset
# cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, starts_with("Q10"), Start_time, end_time) %>% rename(start_time = Start_time)
cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, Q10cbsg89, Q10m6, Start_time, end_time) %>% rename(start_time = Start_time)
dim(cbsg)
library(tidyverse)
filename <- "SWEEP_CBSG_Final_2018_10_07_03_47_51_479460.csv"
cbsg <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(cbsg)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename cbsg file with new var names
colnames(cbsg) <- newvarnames$newnames
# remove alpha characters from simserial variable
cbsg$simserial <- gsub("n/a", "", cbsg$simserial)
cbsg$simserial <- gsub("[a-zA-Z]", "", cbsg$simserial)
# remove objects
# rm(list = c("fullnames", "last1", "last2", "vnames", "numerics", "inside_pranth_1", "inside_pranth_2", "dup", "dup2", "filename", "newvarnames"))
# subset
cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, starts_with("Q10"), Start_time, end_time) %>% rename(start_time = Start_time)
# cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, Q10cbsg89, Q10m6, Start_time, end_time) %>% rename(start_time = Start_time)
write_csv(cbsg, paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/cbsg_subset__", format(Sys.time(), "%u%b%Y"), ".csv"), na = "")
dim(cbsg)
library(tidyverse)
filename <- "SWEEP_MPK_Final_2018_10_06_23_57_48_337873.csv"
mkp <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(mkp)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename mkp file with new var names
colnames(mkp) <- newvarnames$newnames
# remove alpha characters from simserial variable
mkp$simserial <- gsub("n/a", "", mkp$simserial)
mkp$simserial <- gsub("[a-zA-Z]", "", mkp$simserial)
# remove objects
# rm(list = c("fullnames", "last1", "last2", "vnames", "numerics", "inside_pranth_1", "inside_pranth_2", "dup", "dup2", "filename", "newvarnames"))
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, Q10m6, start_time, end_time)
write_csv(mkp, paste0("~/Dropbox/SWEEP shared/Baseline QC Reports/Data/mkp_subset__", format(Sys.time(), "%u%b%Y"), ".csv"), na = "")
dim(mkp)
library(tidyverse)
filename <- "SWEEP_MPK_Final_2018_10_06_23_57_48_337873.csv"
mkp <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(mkp)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename mkp file with new var names
colnames(mkp) <- newvarnames$newnames
# remove alpha characters from simserial variable
mkp$simserial <- gsub("n/a", "", mkp$simserial)
mkp$simserial <- gsub("[a-zA-Z]", "", mkp$simserial)
dim(mkp)
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, Q10m6, start_time, end_time)
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, Q10m6, start_time, end_time)
grep("_NA", names(mkp))
grep("_NA", names(mkp), value = T)
mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"))
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
select(mkp, start:Q2b_1) %>% dim()
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
select(mkp, start:Q2b_1, !contains("NA")) %>% dim()
mkp[grep("_NA", names(mkp)),] %>% View
grep("_NA", names(mkp))
select(mkp, grep("_NA", names(mkp))) %>% View
%>% View
select(mkp, grep("_NA", names(mkp)))
select(mkp, !grep("_NA", names(mkp))) %>% View
select(mkp, -grep("_NA", names(mkp))) %>% dim
select(mkp, !grep("_NA", names(mkp))) %>% dim
mkp[-grep("_NA", names(mkp)), ]%>% dim
dim(mkp)
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
select(mkp, start:Q2b_1, !contains("NA")) %>% dim()
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
select(mkp, start:Q2b_1, contains("NA")) %>% dim()
grep("Other_NA_NA", names(mkp))
mkp[!grep("Other_NA_NA", names(mkp)), ] %>% dim
mkp[, !grep("Other_NA_NA", names(mkp))] %>% dim
mkp[, c(2540, 2561, 3138, 3280, 3295)] %>% dim()
mkp[, grep("Other_NA_NA", names(mkp))] %>% dim()
mkp[, -grep("Other_NA_NA", names(mkp))] %>% dim()
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
select(mkp, start:Q2b_1, contains("_NA")) %>% dim()
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
grep("_NA", names(mkp))
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
remove_cols <- grep("_NA", names(mkp))
library(tidyverse)
filename <- "SWEEP_MPK_Final_2018_10_06_23_57_48_337873.csv"
mkp <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(mkp)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename mkp file with new var names
colnames(mkp) <- newvarnames$newnames
# remove alpha characters from simserial variable
mkp$simserial <- gsub("n/a", "", mkp$simserial)
mkp$simserial <- gsub("[a-zA-Z]", "", mkp$simserial)
# remove objects
# rm(list = c("fullnames", "last1", "last2", "vnames", "numerics", "inside_pranth_1", "inside_pranth_2", "dup", "dup2", "filename", "newvarnames"))
# subset
# mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, starts_with("Q10"), start_time, end_time)
remove_cols <- grep("_NA", names(mkp))
mkp <- mkp[, -remove_cols]
mkp <- select(mkp, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), Q2_estimate, contains("Q2x"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q5a, Q5m2, Q5m3, Q5m4, Q5m5, Q5m6, Q5m7, Q5m8, Q5m9, Q5m10, Q5m1, Q10m6, start_time, end_time)
write_csv(mkp, paste0("~/Dropbox/SWEEP shared/Baseline QC Reports/Data/mkp_subset__", format(Sys.time(), "%u%b%Y"), ".csv"), na = "")
mkp %>% dim
rm(list=ls())
library(tidyverse)
filename <- "SWEEP_MPK_Final_2018_10_06_23_57_48_337873.csv"
mkp <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
head(mkp)
sap <- readstata13::read.dta13("~/Documents/SAP 2018/Data/TAF Merge W1-13 Client Version v7.3.dta")
# feather::write_feather(sap, "~/Documents/SAP 2018/Data/TAF Merge W1-13 Client Version v6.2.feather")
sap.w <- survey::svydesign(id = ~1, data = sap[!is.na(sap$w),], weights = ~w); beepr::beep(5)
# national data for migration
svytable(~z62+m8, sap.w) %>% prop.table(2)
library(survey)
library(tidyverse)
# national data for migration
svytable(~z62+m8, sap.w) %>% prop.table(2)
# national data for migration
svytable(~z62+m8, sap.w) %>% prop.table(2) %>% data.frame()
# national data for migration
svytable(~z62+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~z63+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~reasonReturn+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
attributes(sap$reasonReturn)
svytable(~whereReturn+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
# national data for migration
svytable(~z62+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~reasonReturn+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~whereReturn+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame()
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked")
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
group_by(m8) %>% mutate(Freq = Freq/sum(Freq))
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
group_by(m8) %>% mutate(Freq = Freq/sum(Freq)) %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
group_by(m8) %>% mutate(Freq = round(Freq/sum(Freq), 4)) %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
group_by(m8) %>% mutate(Freq = round((Freq/sum(Freq))*100, 4)) %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
group_by(m8) %>% mutate(Freq = round((Freq/sum(Freq))*100, 4)) %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
group_by(m8) %>% mutate(Freq = round((Freq/sum(Freq))*100, 5)) %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
group_by(m8) %>% mutate(Freq = round((Freq/sum(Freq))*100, 5)) %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
group_by(m8) %>% mutate(Freq = round((Freq/sum(Freq))*100, 1)) %>% spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>%
spread(m8, Freq)
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>% spread(m8, Freq)
svytable(~z20d+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~z20e_b+m8, sap.w)
svytable(~z20e_b+m8, sap.w) %>% data.frame()
svytable(~z20e_b+m8, sap.w) %>% data.frame() %>% filter(z20e_b != "Not Asked")
svytable(~z20e_b+m8, sap.w) %>% data.frame() %>% filter(z20e_b != "Not ASked")
svytable(~z20e_b+m8, sap.w) %>% data.frame() %>% filter(z20e_b != "Not ASked") %>% spread(m8, Freq)
# national data for migration
svytable(~z62+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~reasonReturn+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~whereReturn+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~z66+m8, sap.w) %>% data.frame() %>% filter(z66 != "Not Asked") %>% spread(m8, Freq) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~z20d+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~z20e_b+m8, sap.w) %>% data.frame() %>% filter(z20e_b != "Not ASked") %>% spread(m8, Freq) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~x135d+m8)
svytable(~x135d+m8, sap.w)
svytable(~x135d+m8+z20, sap.w)
svytable(~x135d+m8+z20, sap.w) %>% prop.table(c(2,3))
svytable(~x135d+m8+z20, sap.w) %>% prop.table(c(1,2))
svytable(~z20+x135d+m8, sap.w) %>% prop.table(c(2,3))
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3))
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame()
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq)
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(c(m8, z20), Freq)
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq)
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame()
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% select() %>% spread(m8, Freq)
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq)
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))}
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))} %>% arrange(1)
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))} %>% arrange(x135d)
svytable(~z20+m8+x135d, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))} %>% arrange(x135d) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~z20+m8+x135e, sap.w) %>% prop.table(c(2,3)) %>% data.frame()
svytable(~z20+m8+x135e, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq)
svytable(~z20+m8+x135e, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))} %>% arrange(x135e) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~z20+m8+x135f, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))} %>% arrange(x135f) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~z20+m8+x67, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))} %>% arrange(x67) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~z20+m8, sap.w)
svytable(~z20+m8, sap.w) %>% prop.table(2)
svytable(~z20+m8, sap.w) %>% prop.table(2) %>% data.frame()
svytable(~z20+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq)
svytable(~z20+m8, sap.w) %>% prop.table(2) %>% data.frame() %>% spread(m8, Freq) %>% write_csv("~/Downloads/crosstabs.csv")
svytable(~z20+m8+x392, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq)
svytable(~z20+m8+x392, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))}
svytable(~z20+m8+x392, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))} %>% arrange(x392)
svytable(~z20+m8+x392, sap.w) %>% prop.table(c(2,3)) %>% data.frame() %>% spread(m8, Freq) %>%
{select(., 2,1,3:ncol(.))} %>% arrange(x392) %>% write_csv("~/Downloads/crosstabs.csv")
filename <- "SWEEP_CBSG_Final_2018_10_07_03_47_51_479460.csv"
cbsg <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
table(cbsg$Q10m6)
fullnames <- colnames(cbsg)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename cbsg file with new var names
colnames(cbsg) <- newvarnames$newnames
# remove alpha characters from simserial variable
cbsg$simserial <- gsub("n/a", "", cbsg$simserial)
cbsg$simserial <- gsub("[a-zA-Z]", "", cbsg$simserial)
table(cbsg$Q10m6)
library(tidyverse)
filename <- "SWEEP_CBSG_Final_2018_10_07_03_47_51_479460.csv"
cbsg <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
grep("Q10m6", names(cbsg))
table(cbsg[[5335]])
library(tidyverse)
filename <- "SWEEP_MPK_Final_2018_10_06_23_57_48_337873.csv"
mkp <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
grep("Q10m6", names(mkp))
table(mkp[[3475]])
grep("Q10m6", names(mkp), value = T)
table(mkp$`cons/mod10/Q10m6`)
library(tidyverse)
filename <- "SWEEP_MPK_Final_2018_10_06_23_57_48_337873.csv"
mkp <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(mkp)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
grep("Q10m6", names(mkp))
grep("Q10m6", names(mkp), value = T)
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename mkp file with new var names
colnames(mkp) <- newvarnames$newnames
library(tidyverse)
filename <- "SWEEP_MPK_Final_2018_10_06_23_57_48_337873.csv"
mkp <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(mkp)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename mkp file with new var names
colnames(mkp) <- newvarnames$newnames
library(tidyverse)
filename <- "SWEEP_CBSG_Final_2018_10_07_03_47_51_479460.csv"
cbsg <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(cbsg)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename cbsg file with new var names
colnames(cbsg) <- newvarnames$newnames
# remove alpha characters from simserial variable
cbsg$simserial <- gsub("n/a", "", cbsg$simserial)
cbsg$simserial <- gsub("[a-zA-Z]", "", cbsg$simserial)
# subset
# cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, starts_with("Q10"), Start_time, end_time) %>% rename(start_time = Start_time)
cbsg <- select(cbsg, start:Q2b_1, starts_with("Q2b"), contains("Q2l"), contains("Q2n1"), contains("Q2n2"), starts_with("Q2g"), starts_with("Q3a"), starts_with("Q3c"), starts_with("Q3f"), Q4b1, Q4b2, Q4c, Q5a, contains("Q6g1"), Q7g1, Q7f1, Q7f2, Q2_estimate, starts_with("Q2x"), starts_with("Q5m"), Q6a, Q6b, Q6c, Q6d, Q6e, Q6f, Q7k1, Q7n, Q10cbsg89, Q10m6, Start_time, end_time) %>% rename(start_time = Start_time)
write_csv(cbsg, paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/cbsg_subset__", format(Sys.time(), "%u%b%Y"), ".csv"), na = "")
format(Sys.time(), "%u%b%Y")
Sys.time()
format(Sys.time(), "%d%b%Y")
library(tidyverse)
filename <- "SWEEP_CBSG_Final_2018_10_08_00_26_41_385731.csv"
cbsg <- read_csv(paste0("/Users/macbookair/Dropbox/SWEEP shared/Baseline QC Reports/Data/", filename))
# parsing variable names and constract new variable names
fullnames <- colnames(cbsg)
last1 <- word(fullnames, -1, sep = "/")
last2 <- word(fullnames, -2, sep = "/")
vnames <- last1
numerics = !is.na(as.numeric(vnames))
vnames[numerics] <- paste(last2[numerics], last1[numerics], sep = "_")
inside_pranth_1 <- gsub(".*?\\[(.*?)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
inside_pranth_2 <- gsub(".*\\[(.*)\\].*", "\\1", fullnames, perl=TRUE) %>% as.numeric() %>% as.character()
dup <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup] <- paste(vnames[dup], inside_pranth_1[dup], sep = "_")
dup2 <- duplicated(vnames) | duplicated(vnames, fromLast = TRUE)
vnames[dup2] <- paste(vnames[dup2], inside_pranth_2[dup2], sep = "_")
# Assemble all the data in a dataframe
newvarnames <- data.frame(oldnames=fullnames, newnames=vnames, numerics=numerics, dup=dup, dup2=dup2, inside_pranth_1=inside_pranth_1, inside_pranth_2=inside_pranth_2)
# rename cbsg file with new var names
colnames(cbsg) <- newvarnames$newnames
# remove alpha characters from simserial variable
cbsg$simserial <- gsub("n/a", "", cbsg$simserial)
cbsg$simserial <- gsub("[a-zA-Z]", "", cbsg$simserial)
colnames(cbsg)
colnames(cbsg)[4000:4366]
shiny::runApp('~/Desktop/ShinyApps/Upload and Plot/input data plot scatter/deployed')
